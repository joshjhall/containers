# git-cliff configuration for Container Build System
# See: https://git-cliff.org/docs/configuration

[changelog]
# Template for the changelog header
header = """
# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

"""

# Template for the changelog body
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [Unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - {{ commit.message | upper_first | trim }}\
          {% if commit.breaking %} [**BREAKING**]{% endif %}\

    {% endfor %}
{% endfor %}\n
"""

# Template for the changelog footer
footer = """
{% for release in releases -%}
    {% if release.version %}\
        [{{ release.version | trim_start_matches(pat="v") }}]: \
            https://github.com/joshjhall/containers/compare/\
            {% if release.previous.version %}{{ release.previous.version }}{% else %}{{ release.commit_id }}{% endif %}\
            ...{{ release.version }}
    {% endif %}\
{% endfor %}
"""

# Remove the leading and trailing whitespace from the templates
trim = true

[git]
# Parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# Filter out the commits that are not conventional
filter_unconventional = false
# Process each line of a commit as an individual commit
split_commits = false
# Regex for parsing and grouping commits
commit_parsers = [
    { message = "^feat", group = "Added" },
    { message = "^add", group = "Added" },
    { message = "^fix", group = "Fixed" },
    { message = "^perf", group = "Improved" },
    { message = "^refactor", group = "Changed" },
    { message = "^docs", group = "Documentation" },
    { message = "^test", group = "Testing" },
    { message = "^chore\\(release\\):", skip = true },
    { message = "^chore", group = "Miscellaneous" },
    { message = "^ci", group = "CI/CD" },
    { message = "^build", group = "Build" },
    { body = ".*security", group = "Security" },
    { message = "^revert", group = "Reverted" },
]

# Protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false

# Filter out the commits that are not matched by commit parsers
filter_commits = false

# Regex for matching git tags
tag_pattern = "v[0-9].*"

# Sort commits in the changelog by oldest or newest first
sort_commits = "oldest"

# Limit the number of commits included in the changelog
# limit_commits = 42
